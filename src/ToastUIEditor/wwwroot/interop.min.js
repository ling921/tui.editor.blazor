import"./toastui-editor-all.min.js";export class ToastUI{instance=null;dotNetRefs=[];constructor(e){if(!e.el)throw new Error("element is required in options");e.events=Object.assign({},...Object.keys(e.events||{}).map((t=>{const o=e.events[t];return this.dotNetRefs.push(o),{[t]:(...e)=>{"load"===t&&(e=[]);for(let t=0;t<2;t++){if(e.length<=t){e.push(null);continue}const o=e[t];o instanceof KeyboardEvent&&(e[t]={key:o.key,code:o.code,location:o.location,repeat:o.repeat,ctrlKey:o.ctrlKey,shiftKey:o.shiftKey,altKey:o.altKey,metaKey:o.metaKey,type:o.type})}if(o.invokeMethodAsync("InvokeAsync",...e),"beforePreviewRender"===t||"beforeConvertWysiwygToMarkdown"===t)return e[0]}}}))),e.hasOwnProperty("previewStyle")&&(e.previewStyle=e.previewStyle?.toLowerCase()||"tab"),e.hasOwnProperty("initialEditType")?e.initialEditType=e.initialEditType?.toLowerCase()||"markdown":e.viewer=!0;let t=e.theme?.toLowerCase();if("auto"===t){t=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}e.theme="dark"===t?"dark":"light",this.instance=toastui.Editor.factory(e),window.editor=this.instance}static factory(e){return new ToastUI(e)}static setLanguage(e,t){toastui.Editor.setLanguage(e,t)}static getLanguages(e){Object.keys(e).forEach((t=>{const o=e[t];toastui.Editor.setLanguage(t,o)}))}destroy(){this.instance?.destroy(),this.dotNetRefs.forEach((e=>{e.dispose()}))}}