import"./toastui-editor-all.min.js";function isBlazorWebAssembly(){return null!==document.querySelector('script[src*="blazor.webassembly.js"]')}function getPrefersColorScheme(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}function getKeyboardEventArgs(e){return{key:e.key,code:e.code,location:e.location,repeat:e.repeat,ctrlKey:e.ctrlKey,shiftKey:e.shiftKey,altKey:e.altKey,metaKey:e.metaKey,type:e.type}}function decycle(e,t=new Set,r=[],o=new WeakMap){if(!e||"object"!=typeof e)return e;if(t.has(e)){const t=`${r.indexOf(e)+1}`;return o.set(e,t),{$ref:t}}let n;r.length;if(r.push(e),Array.isArray(e)){n=[],t.add(e);for(let s=0;s<e.length;s++)n[s]=decycle(e[s],t,r,o);t.delete(e)}else{n={},t.add(e);for(let s in e)e.hasOwnProperty(s)&&(n[s]=decycle(e[s],t,r,o));t.delete(e)}return o.has(e)&&(n.$id=o.get(e)),n}export class ToastUI{instance=null;type="editor";dotNetRefs=[];constructor(e){if(!e.el)throw new Error("element is required in options");e.viewer?(e.events=this._viewerEvents(e.ref),e.widgetRules=[],this.type="viewer"):(e.events=this._editorEvents(e.ref),e.widgetRules=this._resolveEditorWidgetRules(e.widgetRules),this.type="editor"),e.theme="auto"===e.theme?getPrefersColorScheme():e.theme||"light",this.instance=toastui.Editor.factory(e)}static factory(e){return new ToastUI(e)}static setLanguage(e,t){toastui.Editor.setLanguage(e,t)}static setLanguages(e){Object.keys(e).forEach((t=>{ToastUI.setLanguage(t,e[t])}))}static setDefaultLanguage(e){toastui.Editor.i18n.setCode(e)}_commonEvents(e){if(!e)throw new Error("ref in options is required.");return{load:t=>{e.invokeMethodAsync("load")}}}_editorEvents(e){return{...this._commonEvents(e),change:t=>{const r="wysiwyg"===t?this.instance.getHTML():this.instance.getMarkdown();e.invokeMethodAsync("change",t,r)},caretChange:t=>{e.invokeMethodAsync("caretChange",t)},focus:t=>{e.invokeMethodAsync("focus",t)},blur:t=>{e.invokeMethodAsync("blur",t)},keydown:(t,r)=>{e.invokeMethodAsync("keydown",t,getKeyboardEventArgs(r))},keyup:(t,r)=>{e.invokeMethodAsync("keyup",t,getKeyboardEventArgs(r))},beforePreviewRender:t=>(e.invokeMethodAsync("beforePreviewRender",t),t),beforeConvertWysiwygToMarkdown:t=>(e.invokeMethodAsync("beforeConvertWysiwygToMarkdown",t),t)}}_viewerEvents(e){return{...this._commonEvents(e),change:(...t)=>{e.invokeMethodAsync("change",t)},updatePreview:t=>{e.invokeMethodAsync("updatePreview",decycle(t))}}}_resolveEditorWidgetRules(e){return e&&Array.isArray(e)?e.map((e=>(this.dotNetRefs.push(e.ref),{rule:new RegExp(e.rule,"m"),toDOM:t=>{let r="";if(!isBlazorWebAssembly())throw new Error("'toDOM' method is syncahronous in 'WidgetRule' interface, but Blazor server is not supported call synchronous method from JS.");r=e.ref.invokeMethod("toDOM",t);const o=document.createElement("span");return o.innerHTML=r,o}}))):[]}destroy(){this.instance?.destroy(),this.dotNetRefs.forEach((e=>{e.dispose()}))}}